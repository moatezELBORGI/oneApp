
# Route-specific configuration (make sure this matches your needs and does not introduce conflicting headers)
# Global CORS configuration
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-origins=http://localhost:4200
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-headers=*
spring.cloud.gateway.globalcors.cors-configurations.[/**].allow-credentials=true


spring.cloud.gateway.default-filters[0]=DedupeResponseHeader=Access-Control-Allow-Credentials Access-Control-Allow-Origin
spring.cloud.gateway.default-filters[1]=RETAIN_FIRST7

# If global configuration is sufficient, you might not need route-specific CORS settings
# Route-specific configuration
spring.cloud.gateway.routes[0].id=AuthenticationService
spring.cloud.gateway.routes[0].uri=http://localhost:9090
spring.cloud.gateway.routes[0].predicates[0]=Path=/V1/Auth/**

spring.cloud.gateway.routes[1].id=PlayersDataAnalysisService
spring.cloud.gateway.routes[1].uri=http://localhost:9091
spring.cloud.gateway.routes[1].predicates[0]=Path=/V1/PlayersDataAnalysisService/**

spring.cloud.gateway.routes[2].id=ManagementService
spring.cloud.gateway.routes[2].uri=http://localhost:9092
spring.cloud.gateway.routes[2].predicates[0]=Path=/V1/ManagementService/**

spring.cloud.gateway.default-filters=PreserveHostHeader

management.endpoint.health.show-details=always
management.endpoints.jmx.exposure.exclude=*

spring.cloud.consul.host=localhost
spring.cloud.consul.port=8500
spring.cloud.consul.discovery.register=true
spring.cloud.consul.discovery.enabled=true
spring.cloud.consul.discovery.health-check-path=/actuator/health
spring.cloud.consul.discovery.health-check-interval=10s
spring.cloud.consul.discovery.preferIpAddress=true

management.endpoints.web.exposure.include=*

management.endpoints.web.base-path=/actuator